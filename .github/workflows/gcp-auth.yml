name: 'Authenticate to Google Cloud'

# Run this workflow when changes are pushed to the main branch
on:
  push:
    branches:
      - 'main'
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # These permissions are required for the OIDC token exchange (even if not directly using WIF, it's good practice
    # to have 'id-token: write' if you might use OIDC-based actions in the future).
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4
      
      - name: 'Authenticate to Google Cloud (Using SA Key Secret)'
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          # --- Service Account Key (Using GitHub Secret - this should work for you) ---
          # IMPORTANT: Ensure you have a GitHub repository secret named GCP_SA_KEY
          # that contains the full JSON content of your Google Cloud Service Account key.
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

          # --- Workload Identity Federation (WIF) - Keep commented out for now ---
          # If you wish to use WIF in the future, you'll need to configure
          # an Identity Pool and Provider in Google Cloud and replace the
          # placeholders below with your specific values. This method is
          # generally more secure for production but requires more setup.
          # workload_identity_provider: 'projects/PROJECT_NUMBER/locations/global/workloadIdentityPools/POOL_ID/providers/PROVIDER_ID'
          # service_account: 'your-service-account@your-project-id.iam.gserviceaccount.com'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Verify authentication'
        run: |-
          echo "Successfully authenticated to Google Cloud."
          gcloud auth list
          echo "----------------------------------------"
          echo "Current GCP Project:"
          gcloud config list project

      # Add your GCP commands here
      # For example, listing Cloud Storage buckets
      - name: 'Example: List GCS Buckets'
        run: 'gcloud storage ls'